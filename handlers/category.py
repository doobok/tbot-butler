from aiogram import types
from aiogram.dispatcher import FSMContext

from states.mane import CatEdit
from utils.db.categories import Category
from utils.keyboards.category_kbd import categories_list, select_cat_type, confirm_new_cat, go_to_root
from utils.keyboards.global_kbd import go_to_main
from utils.misc.menu_utils import menu_str


async def category_list(msg: types.Message, state: FSMContext):
    await CatEdit.in_menu.set()
    model = 'another'
    if msg.text == menu_str['cat-cost']:
        model = 'cost'
    elif msg.text == menu_str['cat-income']:
        model = 'income'
    await state.update_data(cat_model=model, parent_id=0)
    await msg.answer(f'–í–∏ –∑–Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ —Ä–æ–∑–¥—ñ–ª—ñ *{msg.text}*', reply_markup=go_to_main())
    cat = await Category.view_dir(external_id=msg.from_user.id, model=model, parent_id=0)
    await msg.answer('_–¢—É—Ç –≤–∏ –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∫–∞—Ç–µ–≥–æ—Ä—ñ–π, –¥–æ–¥–∞–≤–∞—Ç–∏ –Ω–æ–≤—ñ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó/–ø—ñ–¥–∫–∞—Ç–µ–≥–æ—Ä—ñ—ó '
                     '—Ç–∞ –≤–∏–¥–∞–ª—è—Ç–∏ –∑–∞—Å—Ç–∞—Ä—ñ–ª—ñ ‚òùÔ∏è –≤–∏–¥–∞–ª—è—Ç–∏ –º–æ–∂–Ω–∞ –ª–∏—à–µ –ø–æ—Ä–æ–∂–Ω—ñ, –Ω–µ –º–æ–∂–Ω–∞ –≤–∏–¥–∞–ª—è—Ç–∏ –≥–ª–æ–±–∞–ª—å–Ω—ñ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó\n\n'
                     '–î–ª—è —Ç–æ–≥–æ, —â–æ–± –¥–æ–¥–∞—Ç–∏ –∫–∞—Ç–µ–≥–æ—Ä—ñ—é \- –ø–µ—Ä–µ–π–¥—ñ—Ç—å –≤ —Ç—É –∫–∞—Ç–µ–≥–æ—Ä—ñ—é, —è–∫–∞ –º–∞—î –±—É—Ç–∏ –±–∞—Ç—å–∫—ñ–≤—Å—å–∫–æ—é –¥–ª—è '
                     '–Ω–µ—ó —Ç–∞ –Ω–∞–ø–∏—à—ñ—Ç—å –º–µ–Ω—ñ —ó—ó –Ω–∞–∑–≤—É\n–ö–∞—Ç–µ–≥–æ—Ä—ñ—ó –ø–µ—Ä—à–æ–≥–æ –ø–æ—Ä—è–¥–∫—É —Ä–æ–∑—Ç–∞—à–æ–≤–∞–Ω—ñ –≤ *–ö–æ—Ä–µ–Ω–µ–≤—ñ–π –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó*_',
                     reply_markup=categories_list(categories=cat, item=None))


async def category_list_select(query: types.CallbackQuery, state: FSMContext, callback_data: dict):
    await query.answer()
    await CatEdit.in_menu.set()
    data = await state.get_data()
    model = data.get('cat_model')
    cat_id = int(callback_data['id'])
    await state.update_data(parent_id=cat_id)
    item = await Category.view(cat_id=cat_id)
    cat = await Category.view_dir(external_id=query.message.chat.id, model=model, parent_id=cat_id)
    if item:
        txt = '*%s* üëà –ø–æ—Ç–æ—á–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä—ñ—è' % item.get('name')
    else:
        txt = 'üëâ –ö–æ—Ä–µ–Ω–µ–≤–∞ –∫–∞—Ç–µ–≥–æ—Ä—ñ—è'
    await query.message.edit_text(txt)
    await query.message.edit_reply_markup(reply_markup=categories_list(categories=cat, item=item))


async def add_cat1(msg: types.Message, state: FSMContext):
    if len(msg.text) > 20:
        await msg.answer('–ù–∞–∑–≤–∞ –Ω–∞–¥—Ç–æ –¥–æ–≤–≥–∞, –ø—Ä–∏–¥—É–º–∞–π—Ç–µ –∫–æ—Ä–æ—Ç—à—É')
    else:
        await state.update_data(new_cat_name=msg.text)
        await CatEdit.next()
        await msg.answer('–í–∫–∞–∂—ñ—Ç—å —Ç–∏–ø –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó\n\n*–ì–ª–æ–±–∞–ª—å–Ω–∞* —á–∏ *–ü—Ä–∏–≤–∞—Ç–Ω–∞*\n\n'
                         '–ë—É–¥—å—Ç–µ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞–ª—å–Ω—ñ, –æ—Å–∫—ñ–ª—å–∫–∏ –≥–ª–æ–±–∞–ª—å–Ω—ñ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó –±—É–¥—É—Ç—å –±–∞—á–∏—Ç–∏ —É—Å—ñ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω—ñ —É—á–∞—Å–Ω–∏–∫–∏, '
                         '—Ç–∞–∫–æ–∂ –≥–ª–æ–±–∞–ª—å–Ω—É –∫–∞—Ç–µ–≥–æ—Ä—ñ—é –Ω–µ–º–æ–∂–ª–∏–≤–æ –≤–∏–¥–∞–ª–∏—Ç–∏, —Ç–æ–º—É —Å—Ç–≤–æ—Ä—é–π—Ç–µ —ó—Ö –ª–∏—à–µ —è–∫—â–æ –ø–æ–≤–Ω—ñ—Å—Ç—é –≤–ø–µ–≤–Ω–µ–Ω—ñ '
                         '–≤ —Å–≤–æ—ó—Ö –¥—ñ—è—Ö', reply_markup=select_cat_type())


async def add_cat2(query: types.CallbackQuery, state: FSMContext, callback_data: dict):
    await CatEdit.next()
    await query.answer()
    data = await state.get_data()
    cat_name = data.get('new_cat_name')
    cat_global = callback_data['type']
    await state.update_data(new_cat_type=cat_global)
    txt = f'–í–∏ –¥—ñ–π—Å–Ω–æ –±–∞–∂–∞—î—Ç–µ –¥–æ–¥–∞—Ç–∏ –∫–∞—Ç–µ–≥–æ—Ä—ñ—é:\n*{cat_name}*?'
    await query.message.edit_text(txt)
    await query.message.edit_reply_markup(reply_markup=confirm_new_cat())


async def category_create(query: types.CallbackQuery, state: FSMContext):
    await query.answer()
    data = await state.get_data()
    cat_name = data.get('new_cat_name')
    cat_model = data.get('cat_model')
    parent_id = data.get('parent_id')
    cat_global = data.get('new_cat_type')
    await Category.create(name=str(cat_name), external_id=query.message.chat.id, model=cat_model,
                          parent_id=parent_id, global_state=cat_global)
    await CatEdit.in_menu.set()
    txt = '–ö–∞—Ç–µ–≥–æ—Ä—ñ—è —É—Å–ø—ñ—à–Ω–æ –¥–æ–¥–∞–Ω–∞'
    await query.message.edit_text(txt)
    await query.message.edit_reply_markup(reply_markup=go_to_root())
