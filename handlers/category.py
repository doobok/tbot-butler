from aiogram import types
from aiogram.dispatcher import FSMContext

from states.mane import CatEdit
from utils.db.categories import Category
from utils.keyboards.category_kbd import categories_list, categories_menu
from utils.misc.menu_utils import menu_str


async def category_list(msg: types.Message, state: FSMContext):
    await CatEdit.in_menu.set()
    model = 'another'
    if msg.text == menu_str['cat-cost']:
        model = 'cost'
    elif msg.text == menu_str['cat-income']:
        model = 'income'
    await state.update_data(cat_model=model)
    await msg.answer(f'–í–∏ –∑–Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ —Ä–æ–∑–¥—ñ–ª—ñ *{msg.text}*', reply_markup=categories_menu())
    cat = await Category.view_dir(external_id=msg.from_user.id, model=model, parent_id=0)
    await msg.answer('–¢—É—Ç –≤–∏ –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∫–∞—Ç–µ–≥–æ—Ä—ñ–π, –¥–æ–¥–∞–≤–∞—Ç–∏ –Ω–æ–≤—ñ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó/–ø—ñ–¥–∫–∞—Ç–µ–≥–æ—Ä—ñ—ó '
                     '—Ç–∞ –≤–∏–¥–∞–ª—è—Ç–∏ –∑–∞—Å—Ç–∞—Ä—ñ–ª—ñ –≤–∏–¥–∞–ª—è—Ç–∏ –º–æ–∂–Ω–∞ –ª–∏—à–µ –ø–æ—Ä–æ–∂–Ω—ñ',
                     reply_markup=categories_list(categories=cat, item=None))


async def category_list_select(query: types.CallbackQuery, state: FSMContext, callback_data: dict):
    data = await state.get_data()
    model = data.get('cat_model')
    cat_id = int(callback_data['id'])
    item = await Category.view(cat_id=cat_id)
    cat = await Category.view_dir(external_id=query.message.chat.id, model=model, parent_id=cat_id)
    if item:
        txt = '*%s* üëà –ø–æ—Ç–æ—á–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä—ñ—è' % item.get('name')
    else:
        txt = 'üëâ –ö–æ—Ä–µ–Ω–µ–≤–∞ –∫–∞—Ç–µ–≥–æ—Ä—ñ—è'
    await query.message.edit_text(txt)
    await query.message.edit_reply_markup(reply_markup=categories_list(categories=cat, item=item))


async def category_create(msg: types.Message, state: FSMContext):
    await Category.create(name='cat1', external_id=msg.from_user.id, model='cost', parent_id=1, global_state=False)
